basePath: /
definitions:
  model.AddPreferStockRequest:
    properties:
      account:
        type: string
      stock_code:
        type: string
    type: object
  model.AddPreferStockResponse:
    properties:
      error_msg:
        type: string
      is_success:
        type: boolean
    type: object
  model.DeletePreferStockRequest:
    properties:
      account:
        type: string
      stock_code:
        type: string
    type: object
  model.DeletePreferStockResponse:
    properties:
      error_msg:
        type: string
      is_success:
        type: boolean
    type: object
  model.FactorRawData:
    properties:
      ema13:
        items:
          type: number
        type: array
      ema34:
        items:
          type: number
        type: array
      ema55:
        items:
          type: number
        type: array
      ma13:
        items:
          type: number
        type: array
      ma34:
        items:
          type: number
        type: array
      ma55:
        items:
          type: number
        type: array
    type: object
  model.FollowStock:
    properties:
      account:
        type: string
      exchange:
        type: string
      industry:
        type: string
      name:
        type: string
      stock_code:
        type: string
    type: object
  model.GetAllStockCodeResponse:
    properties:
      stock_info_list:
        items:
          $ref: '#/definitions/model.StockBasicInfo'
        type: array
    type: object
  model.GetPreferStockRequest:
    properties:
      account:
        type: string
    type: object
  model.GetPreferStockResponse:
    properties:
      error_msg:
        type: string
      follow_stock_list:
        items:
          $ref: '#/definitions/model.FollowStock'
        type: array
      is_success:
        type: boolean
    type: object
  model.GetRecommandStockRequest:
    properties:
      query_data_len:
        type: integer
      query_date:
        example: "2021-07-01"
        type: string
    type: object
  model.GetRecommandStockResponse:
    properties:
      stock_datas:
        items:
          $ref: '#/definitions/model.SingleStockData'
        type: array
      stock_prediction_datas:
        items:
          $ref: '#/definitions/model.StockPredictItem'
        type: array
    type: object
  model.GetTotalMarketIndexDataRequest:
    properties:
      query_date:
        example: "2021-07-01"
        type: string
    type: object
  model.GetTotalMarketIndexDataResponse:
    properties:
      index_pred_data:
        $ref: '#/definitions/model.SinglePredictRecord'
      index_raw_data:
        $ref: '#/definitions/model.SinglePredictRecord'
      show_msg:
        type: string
    type: object
  model.LoginRequest:
    properties:
      account:
        type: string
      passwd:
        type: string
    type: object
  model.LoginResponse:
    properties:
      err_msg:
        type: string
      login_succ:
        type: boolean
    type: object
  model.LogoutRequest:
    properties:
      account:
        type: string
    type: object
  model.LogoutResponse:
    properties:
      err_msg:
        type: string
      logout_succ:
        type: boolean
    type: object
  model.MarketRawData:
    properties:
      close:
        items:
          type: number
        type: array
      date:
        items:
          type: string
        type: array
      high:
        items:
          type: number
        type: array
      low:
        items:
          type: number
        type: array
      money:
        items:
          type: number
        type: array
      open:
        items:
          type: number
        type: array
      volume:
        items:
          type: number
        type: array
    type: object
  model.QueryStockDataRequest:
    properties:
      query_data_len:
        type: integer
      stock_list:
        items:
          type: string
        type: array
    type: object
  model.QueryStockDataResponse:
    properties:
      stock_datas:
        items:
          $ref: '#/definitions/model.SingleStockData'
        type: array
    type: object
  model.SinglePredictRecord:
    properties:
      close:
        items:
          type: number
        type: array
      date:
        items:
          type: string
        type: array
      high:
        items:
          type: number
        type: array
      low:
        items:
          type: number
        type: array
      open:
        items:
          type: number
        type: array
    type: object
  model.SingleStockData:
    properties:
      stock_info:
        $ref: '#/definitions/model.StockBasicInfo'
      stock_raw_datas:
        items:
          $ref: '#/definitions/model.StockSinglePeriodData'
        type: array
    type: object
  model.StockBasicInfo:
    properties:
      exchange:
        example: BJSE/SZSE/SSE
        type: string
      stock_code:
        example: 002142.SZ
        type: string
      stock_industry:
        example: 石油
        type: string
      stock_name:
        example: 宁波银行
        type: string
    type: object
  model.StockPredictItem:
    properties:
      prediction_record:
        $ref: '#/definitions/model.SinglePredictRecord'
      show_msg:
        type: string
      stock_info:
        $ref: '#/definitions/model.StockBasicInfo'
    type: object
  model.StockSinglePeriodData:
    properties:
      factor_raw_data:
        $ref: '#/definitions/model.FactorRawData'
      market_raw_data:
        $ref: '#/definitions/model.MarketRawData'
      period_type:
        type: string
    type: object
info:
  contact:
    email: lrt12250914@outlook.com
    name: Greetlist
    url: http://github.com/greetlist
  description: server API for stock web
  termsOfService: http://github.com/greetlist/
  title: Stock-Show Web API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: User Login
      operationId: login
      parameters:
      - description: login
        in: body
        name: request_json
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LoginResponse'
      summary: User Login
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: User Logout
      operationId: logout
      parameters:
      - description: Logout
        in: body
        name: request_json
        required: true
        schema:
          $ref: '#/definitions/model.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.LogoutResponse'
      summary: User Logout
  /api/stock/getAllStockCode:
    get:
      description: Return All Stock Code
      operationId: getAllStockCode
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GetAllStockCodeResponse'
      summary: Query All Stock Code
  /api/stock/getDailyCalcStockData:
    get:
      description: Return All Daily Calc Stock Data
      operationId: getDailyCalcStockData
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.MarketRawData'
      summary: Query Daily Calc Stock Data
  /api/stock/getRecommandStockPrediction:
    post:
      consumes:
      - application/json
      description: Return Recommand Stock Prediction Data
      operationId: getRecommandStockPrediction
      parameters:
      - description: Query Date
        in: body
        name: request_json
        required: true
        schema:
          $ref: '#/definitions/model.GetRecommandStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GetRecommandStockResponse'
      summary: Query Recommand Stock Prediction Data
  /api/stock/getTotalMarketIndexData:
    post:
      consumes:
      - application/json
      description: Return Strategy Sepcific Computed Data
      operationId: getTotalMarketIndexData
      parameters:
      - description: 'Query Index '
        in: body
        name: request_json
        required: true
        schema:
          $ref: '#/definitions/model.GetTotalMarketIndexDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GetTotalMarketIndexDataResponse'
      summary: Query Sepcific All Index Computed Data
  /api/stock/queryStockData:
    post:
      consumes:
      - application/json
      description: Return Strategy Sepcific Computed Data
      operationId: queryStockData
      parameters:
      - description: Query Stock List
        in: body
        name: request_json
        required: true
        schema:
          $ref: '#/definitions/model.QueryStockDataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.QueryStockDataResponse'
      summary: Query Sepcific Stock Computed Data
  /api/user/addPreferStock:
    post:
      consumes:
      - application/json
      description: User AddPreferStock
      operationId: addPreferStock
      parameters:
      - description: login
        in: body
        name: request_json
        required: true
        schema:
          $ref: '#/definitions/model.AddPreferStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.AddPreferStockResponse'
      summary: User AddPreferStock
  /api/user/deletePreferStock:
    post:
      consumes:
      - application/json
      description: User DeletePreferStock
      operationId: deletePreferStock
      parameters:
      - description: login
        in: body
        name: request_json
        required: true
        schema:
          $ref: '#/definitions/model.DeletePreferStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DeletePreferStockResponse'
      summary: User DeletePreferStock
  /api/user/getPreferStock:
    post:
      consumes:
      - application/json
      description: User GetPreferStock
      operationId: getPreferStock
      parameters:
      - description: login
        in: body
        name: request_json
        required: true
        schema:
          $ref: '#/definitions/model.GetPreferStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GetPreferStockResponse'
      summary: User GetPreferStock
swagger: "2.0"
